{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/searchForm/StyledSearchForm.js","components/searchForm/SearchForm.js","components/movieGallery/StyledMovieGallery.js","components/movieGallery/MovieGallery.js","views/moviePage/MoviesPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","StyledSearchForm","styled","div","SearchForm","getMovies","useState","query","setQuery","className","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","StyledMovieGallery","MovieGallery","movies","page","location","useLocation","match","useRouteMatch","map","item","to","pathname","url","id","state","movieId","src","poster_path","alt","name","title","width","height","release_date","InitialState","error","maxpages","MoviesPage","setState","setError","history","useHistory","a","fetchSearchMovies","res","length","prev","total_pages","push","search","useEffect","then"],"mappings":"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","file":"static/js/MoviesPage.2aadf80b.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\r\n\r\nconst StyledSearchForm = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #ffffff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n  .SearchForm {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n  }\r\n  .SearchForm-button {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n    outline: none;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  .SearchForm-button:hover {\r\n    opacity: 1;\r\n  }\r\n  .SearchForm-button-label {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n  .SearchForm-input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n  .SearchForm-input::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport default StyledSearchForm;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StyledSearchForm from './StyledSearchForm';\r\n\r\nconst SearchForm = ({ getMovies }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const onHandleInput = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    getMovies(query);\r\n  };\r\n\r\n  return (\r\n    <StyledSearchForm>\r\n      <form className=\"SearchForm\" onSubmit={onFormSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <label>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n            onChange={onHandleInput}\r\n            value={query}\r\n          />\r\n        </label>\r\n      </form>\r\n    </StyledSearchForm>\r\n  );\r\n};\r\n\r\nSearchForm.propTypes = {\r\n  getMovies: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchForm;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledMovieGallery = styled.div`\r\n  .movieGallery {\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  .movieGalleryItem {\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    width: 220px;\r\n    border: 1px solid lightgrey;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  .movieGalleryItem:hover {\r\n    transform: scale(1.03);\r\n    cursor: pointer;\r\n  }\r\n  .movieGalleryImg {\r\n    margin: 0 auto;\r\n    height: 330px;\r\n    width: 220px;\r\n  }\r\n  .movieGalleryLink {\r\n    text-decoration: none;\r\n    color: black;\r\n    text-align: center;\r\n  }\r\n  .movieGalleryText {\r\n    text-align: center;\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nexport default StyledMovieGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport StyledMovieGallery from './StyledMovieGallery';\r\n\r\nconst MovieGallery = ({ movies, page, query }) => {\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <StyledMovieGallery>\r\n      <ul className=\"movieGallery\">\r\n        {movies.map(item => (\r\n          <li className=\"movieGalleryItem\" key={item.id}>\r\n            <Link\r\n              className=\"movieGalleryLink\"\r\n              to={{\r\n                pathname: `${match.url}/${item.id}`,\r\n                state: {\r\n                  from: location.pathname,\r\n                  movieId: item.id,\r\n                  page: page,\r\n                  query: query,\r\n                },\r\n              }}\r\n            >\r\n              <img\r\n                className=\"movieGalleryImg\"\r\n                src={\r\n                  item.poster_path\r\n                    ? `https://www.themoviedb.org/t/p/w220_and_h330_face${item.poster_path}`\r\n                    : 'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg'\r\n                }\r\n                alt={item.name ? item.name : item.title}\r\n                width=\"220\"\r\n                height=\"330\"\r\n              />\r\n              <h3>{item.name ? item.name : item.title}</h3>\r\n            </Link>\r\n            <p className=\"movieGalleryText\">{item.release_date}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </StyledMovieGallery>\r\n  );\r\n};\r\n\r\nMovieGallery.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieGallery;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport SearchForm from '../../components/searchForm/SearchForm';\r\nimport { fetchSearchMovies } from '../../services/tvApi';\r\nimport MovieGallery from '../../components/movieGallery/MovieGallery';\r\n\r\nconst InitialState = {\r\n  movies: [],\r\n  page: 1,\r\n  query: '',\r\n  error: null,\r\n  maxpages: 1,\r\n};\r\n\r\nconst MoviesPage = () => {\r\n  const [state, setState] = useState({ ...InitialState });\r\n  const [error, setError] = useState('');\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const getMovies = async (query, page = 1) => {\r\n    try {\r\n      if (query === '') return;\r\n      const res = await fetchSearchMovies(query, page);\r\n\r\n      if (!res.length) {\r\n        setError('!!!! Bad request !!!!');\r\n      }\r\n\r\n      await setState(prev => ({\r\n        ...prev,\r\n        movies: [...res],\r\n        page: 1,\r\n        query: query,\r\n        maxpages: res.total_pages,\r\n      }));\r\n      history.push({\r\n        ...history,\r\n        search: `?query=${query}`,\r\n      });\r\n    } catch (error) {\r\n      setState(prev => ({ ...prev, error: error }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    location.state &&\r\n      location.state.query &&\r\n      getMovies(location.state.query, location.state.page).then(() =>\r\n        setState(prev => ({ ...prev, page: location.state.page })),\r\n      );\r\n  }, [getMovies, location]);\r\n\r\n  const { movies, page, query } = state;\r\n\r\n  return (\r\n    <>\r\n      {error && <h2>{error}</h2>}\r\n      <SearchForm getMovies={getMovies} />\r\n      <MovieGallery movies={movies} page={page} query={query} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}